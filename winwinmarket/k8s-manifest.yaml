apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
spec:
  replicas: 4
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      containers:
      - name: django-app
        image: hohyun10/winwinmarket_project:v3
        ports:
        - containerPort: 8000
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: django-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: django-app
  minReplicas: 4
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: v1
kind: Service
metadata:
  name: django-app-service
spec:
  selector:
    app: django-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django-app-ingress  
spec:
  rules:
  - host: a56323761356946f4a59e0199939385d-1477522295.ap-northeast-2.elb.amazonaws.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: django-app-service
            port:
              number: 80
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: django-app
spec:
  selector:
    matchLabels:
      app: django-app
  replicas: 0
  strategy:
    canary:
      maxSurge: "25%"
      maxUnavailable: 0
      steps:
      - setWeight: 25
      - pause: {duration: 30}
      - setWeight: 50
      - pause: {duration: 30}
      - setWeight: 75
      - pause: {duration: 30}
      - setWeight: 100
      - pause: {duration: 30}
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: django-app
    spec:
      containers:
      - name: django-app
        image: hohyun10/winwinmarket_project:v3
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 130m
          requests:
            cpu: 80m
